version: 2
jobs:
  build:
    docker:
      - image: circleci/node:8.11.1-stretch
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback 
            - v1-dependencies-
      - run: npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
  test:
    docker:
      - image: circleci/node:8.11.1-stretch
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback 
            - v1-dependencies-
      - run: npm install
      - run: npm test
  build-image:
    docker:
      - image: circleci/node:8.11.1-stretch
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
         keys:
           - v1-dependencies-{{ checksum "package.json" }}
           # fallback 
           - v1-dependencies-
      - setup_remote_docker
      - run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
      - run:
          name: "Build docker image and push to docker hub"
          command: |
            cp Dockerfile.production Dockerfile
            docker build -t pawawat/example-nodejs-circle:latest .
            docker build -t pawawat/example-nodejs-circle:${CIRCLE_SHA1} .
            docker push pawawat/example-nodejs-circle:latest
            docker push pawawat/example-nodejs-circle:${CIRCLE_SHA1}
  ship:
    docker:
      - image: circleci/node:8.11.1-stretch
    working_directory: ~/repo
    steps:
      - setup_remote_docker
      - run:
          command: |
            docker run --rm -it \
              -e CATTLE_ACCESS_KEY="$CATTLE_ACCESS_KEY" \
              -e CATTLE_SECRET_KEY="$CATTLE_SECRET_KEY" \
              -e CATTLE_URL="$CATTLE_URL" \
              etlweather/gaucho upgrade $RANCHER_EXAMPLE_NODEJS \
              --imageUuid 'docker:pawawat/example-nodejs-circle:latest' \
              --batch_size 1 --start_first \
              --auto_complete --timeout 600
      - run: echo Done
workflows:
  version: 2
  my_workflow:
    jobs:
      - build
      - test:
          requires:
            - build
      - build-image:
          requires:
            - build
            - test
      - ship:
          requires:
            - build
            - test
            - build-image

